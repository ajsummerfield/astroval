---
interface Props {
  name: string;
  value?: string;
  required?: boolean;
  requiredErrorMessage?: string;
}

const { name, value, required = false, requiredErrorMessage } = Astro.props;
const attributes = {
  required: required
};
---
<style>
  input + span,
  span:empty {
    display: none;
  }

  input:invalid + span:not(:empty) {
    display: block;
  }
</style>

<text-input data-required-error={requiredErrorMessage}>
  <input type="text" name={name} value={value} {...attributes} />
  <span class="error"></span>
</text-input>

<script>
  import InputValidator from "../modules/InputValidator";
  import type { ValidationResult } from "../types/ValidationResult";

  class TextInput extends InputValidator {
    public validate(): ValidationResult {
      const isValid = this.element.validity.valid;
      return {
        isValid,
        errorMessage: this.dataset.requiredError || this.element.validationMessage
      };
    }
  }

  customElements.define('text-input', TextInput);
</script>